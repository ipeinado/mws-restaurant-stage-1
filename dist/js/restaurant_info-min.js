let restaurant;var map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,setFavButton(e),document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img"),n=DBHelper.imageUrlForRestaurant(e),r="Image of "+e.name+" Restaurant",a="(max-width: 640px) 100vw, 50vw",s=n+"-medium.jpg 570w, "+n+".jpg 800w",i=n+"-medium.webp 570w, "+n+".webp 800w",o=document.createElement("source");o.setAttribute("type","image/webp"),o.setAttribute("srcset",i),o.setAttribute("sizes",a),o.setAttribute("alt",r),t.appendChild(o);const l=document.createElement("source");l.setAttribute("type","image/jpeg"),l.setAttribute("srcset",s),l.setAttribute("sizes",a),l.setAttribute("alt",r),t.appendChild(l);const d=document.createElement("img");d.setAttribute("src",n+".jpg"),d.setAttribute("alt",r),t.appendChild(d),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML(),createReviewForm()}),setFavButton=((e=self.restaurant)=>{const t=document.getElementById("favButton");e.is_favorite?(t.innerHTML="&#10084; Remove from favorites",t.setAttribute("class","fav-button favorite")):(t.innerHTML="<span class='heart'>&#10084;</span> Add to favorites",t.setAttribute("class","fav-button non-favorite")),t.addEventListener("click",favButtonClick)}),favButtonClick=((e,t=self.restaurant)=>{e.preventDefault(),t.is_favorite=!t.is_favorite,setFavButton(t),DBHelper.saveRestaurantsLocally([t]).catch(e=>console.log(e));const n=new Headers({"Content-Type":"application/json"});fetch(`http://localhost:1337/restaurants/${t.id}/?is_favorite=${t.is_favorite}`,{method:"put",headers:n}).catch(e=>console.log(e))}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const s=document.createElement("td");s.innerHTML=e[n],r.appendChild(s),t.appendChild(r)}}),fillReviewsHTML=((e=self.restaurant)=>{const t=document.getElementById("reviews-container"),n=document.getElementById("reviews-list"),r=document.createElement("h3");r.innerHTML="Reviews",t.insertBefore(r,n),DBHelper.fetchReviewsByRestaurant(e.id,(e,n)=>{if(e){const e=document.createElement("p");return e.innerHTML="Sorry, there was a problem downloading the reviews",void t.appendChild(e)}n.length>0&&updateReviewsUI(n)})}),updateReviewsUI=(e=>{const t=document.getElementById("reviews-list");e.forEach(e=>{const n=createReviewHTML(e);t.appendChild(n)})}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p"),r=document.createElement("div"),a=document.createElement("div");r.className="header",a.className="review-content",t.appendChild(r),t.appendChild(a),n.className="reviewer-name",n.innerHTML=e.name,r.appendChild(n);const s=document.createElement("p");s.className="review-date",s.innerHTML=new Date(e.updatedAt).toLocaleDateString("en-US"),r.appendChild(s);const i=document.createElement("p");i.className="review-rating",i.innerHTML=`Rating: ${e.rating}`,a.appendChild(i);const o=document.createElement("p");return o.innerHTML=e.comments,a.appendChild(o),t}),createReviewForm=((e=self.restaurant)=>{const t=document.getElementById("reviews-form"),n=document.createElement("h4");n.innerHTML="Add your review",t.appendChild(n);const r=document.createElement("form");r.setAttribute("method","http://localhost:1337/reviews/"),r.setAttribute("action","post");const a=document.createElement("input");a.setAttribute("id","restaurant_id"),a.setAttribute("name","restaurant_id"),a.setAttribute("type","hidden"),a.setAttribute("value",e.id),r.appendChild(a);const s=document.createElement("div"),i=document.createElement("label");i.setAttribute("for","name"),i.innerHTML="Your Name",s.appendChild(i);const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","name"),o.setAttribute("name","name"),o.setAttribute("required",""),s.appendChild(o),r.appendChild(s);const l=document.createElement("div"),d=document.createElement("label");d.setAttribute("for","rating"),d.innerHTML="Rating",l.appendChild(d);const c=document.createElement("input");c.setAttribute("type","number"),c.setAttribute("id","rating"),c.setAttribute("name","rating"),c.setAttribute("step",1),c.setAttribute("min",1),c.setAttribute("max",5),l.appendChild(c),r.appendChild(l);const u=document.createElement("div"),m=document.createElement("label");m.setAttribute("for","comments"),m.innerHTML="Your comments",u.appendChild(m);const p=document.createElement("textarea");p.setAttribute("id","comments"),p.setAttribute("name","comments"),u.appendChild(p),r.appendChild(u);document.createElement("div");const v=document.createElement("button");v.setAttribute("type","submit"),v.setAttribute("id","submit"),v.setAttribute("class","button"),v.setAttribute("role","button"),v.innerHTML="Submit your review",r.appendChild(v),r.addEventListener("submit",addAndPostReview),t.appendChild(r)}),postReview=(e=>{delete e.is_pending;const t=new Headers({Accept:"application/json","Content-Type":"application/json; charset=utf-8"}),n=JSON.stringify(e);fetch("http://localhost:1337/reviews/",{method:"post",mode:"cors",headers:t,body:n}).then(t=>{if(200!=t.status&&201!=t.status)throw new Error("response status is not 200 or 201");DBHelper.openDB().then(t=>{return t.transaction("reviews","readwrite").objectStore("reviews").put(e)})}).catch(e=>console.log("Could not post the review: "+e))}),addAndPostReview=(e=>{e.preventDefault();const t=new URL(window.location).searchParams.get("id"),n={restaurant_id:parseInt(t,10),name:document.getElementById("name").value,rating:parseInt(document.getElementById("rating").value,10),comments:document.getElementById("comments").value,is_pending:!0};document.getElementById("name").value="",document.getElementById("rating").value="",document.getElementById("comments").value="",updateReviewsUI([n]),DBHelper.saveReviewsLocally([n]).then(e=>console.log("Review saved locally")).catch(e=>console.log("Could not save reviews locally"+e)),"serviceWorker"in navigator&&"SyncManager"in window?(console.log("service worker in navigator etc."),navigator.serviceWorker.ready.then(e=>{e.sync.register("submitReviews")}).catch(e=>{postReview(n)})):postReview(n)}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li"),r=document.createElement("span");r.setAttribute("aria-current","page"),n.appendChild(r),r.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
